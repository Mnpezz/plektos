# Nginx configuration for Plektos
# This configuration ensures proper caching behavior for a Vite-built SPA

server {
    listen 80;
    server_name your-domain.com;  # Replace with your actual domain
    root /path/to/your/dist;      # Replace with your actual dist path
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # NEVER cache HTML files (index.html, 404.html)
    location ~* \.(html)$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # Security headers for HTML files
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        try_files $uri $uri/ /index.html;
    }

    # Aggressively cache versioned assets (JS, CSS with hashes)
    # These files have content hashes in their names, so they can be cached forever
    location ~* /assets/.*\.(js|css)$ {
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        expires 1y;
        
        # Enable CORS for assets if needed
        add_header Access-Control-Allow-Origin "*" always;
        
        try_files $uri =404;
    }

    # Cache static assets with reasonable expiration
    location ~* \.(ico|png|jpg|jpeg|gif|svg|webp|woff|woff2|ttf|eot)$ {
        add_header Cache-Control "public, max-age=2592000" always;  # 30 days
        expires 30d;
        
        try_files $uri =404;
    }

    # Cache manifest and other config files for a shorter time
    location ~* \.(webmanifest|json|xml)$ {
        add_header Cache-Control "public, max-age=86400" always;  # 1 day
        expires 1d;
        
        try_files $uri =404;
    }

    # Handle SPA routing - all routes should serve index.html
    location / {
        try_files $uri $uri/ /index.html;
        
        # Apply no-cache headers to the fallback index.html
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }

    # Optional: Handle API routes if you have a backend
    # location /api/ {
    #     proxy_pass http://your-backend-server;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Optional: HTTPS redirect (recommended for production)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }

# Optional: HTTPS configuration (recommended for production)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # Include the rest of the configuration from above
#     # ...
# }